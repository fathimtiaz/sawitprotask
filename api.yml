# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /registration:
    post:
      summary: Register user.
      operationId: registration
      requestBody:
        description: Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegistrationResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /login:
    post:
      summary: Getting user access token.
      operationId: login
      requestBody:
        description: Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success response returning user id and access token.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /profile:
    get:
      summary: Getting user name and phone.
      operationId: getProfile
      security:
        - bearerAuth: [profile:r]
      responses:
        '200':
          description: Success response returning user name and phone.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/GetProfileResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    RegistrationRequest:
      type: object
      required:
        - phone
        - full_name
        - password
      properties:
        phone:
          type: string
        full_name:
          type: string
        password:
          type: string
    RegistrationResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
    LoginRequest:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      required:
        - id
        - token
      properties:
        id:
          type: integer
          format: int64
        token:
          type: string
    GetProfileResponse:
      type: object
      required:
        - full_name
        - phone
      properties:
        full_name:
          type: string
        phone:
          type: string
    ErrorMessage:
      type: object
      required:
        - error
      properties:
        error:
          type: string
    ErrorResponse:
      type: array
      items:
        $ref: "#/components/schemas/ErrorMessage"
